{"version":3,"sources":["components/field.js","components/translate.js","App.js","index.js"],"names":["Field","fn","id","debounce","input","languageCode","cancelToken","callback","axios","post","q","target","token","data","translations","translatedText","App","rootElement","document","getElementById","createRoot","render","className"],"mappings":"gIAmBeA,I,uCCiBE,SAACC,GAChB,IAAIC,EAAK,IAWV,CAEqBC,CAAQ,iDAC5B,WAAOC,EAAOC,EAAcC,EAAaC,GAAzC,4GAE2BC,IAAMC,KAC3B,uGACA,CACEC,EAAGN,EACHO,OAAQN,GAEV,CAAEC,YAAaA,EAAYM,QARjC,gBAEYC,EAFZ,EAEYA,KASRN,EAASM,EAAKA,KAAKC,aAAa,GAAGC,gBAXvC,gDAaIR,EAAS,IAbb,yDAD4B,6DC7Cf,SAASS,IACtB,OACE,8BACE,4CAGL,CCND,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,qBAAKC,UAAU,UAAf,SACE,cAACN,EAAD,Q","file":"static/js/main.4279da97.chunk.js","sourcesContent":["import React from \"react\";\nimport Flower from \"./svg/flower\";\n\nfunction Field({ value, onChange }) {\n  return (\n    <div className=\"field\">\n      <Flower className=\"flower-right\" fill=\"rgb(110, 146, 119)\" />\n      <Flower className=\"flower-left\" fill=\"rgb(249, 148, 59)\" />\n      <h1>Translate App</h1>\n      <label>Enter English</label>\n      <input\n        className=\"input\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default Field;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction Translate({ language, text }) {\n  const [translated] = useTranslation(text, language);\n\n  return (\n    <div className=\"translate\">\n      <label className=\"label\">Output</label>\n      <h1 className=\"title\">{translated.replace(\"&#39;\", \"'\")}</h1>\n    </div>\n  );\n}\n\nconst useTranslation = (text, language) => {\n  const [translated, setTranslated] = useState(\"\");\n\n  useEffect(() => {\n    if (!text) {\n      return;\n    }\n\n    const cancelToken = axios.CancelToken.source();\n\n    doTranslation(text, language, cancelToken, setTranslated);\n\n    return () => {\n      try {\n        cancelToken.cancel();\n      } catch (err) {}\n    };\n  }, [text, language]);\n\n  return [translated];\n};\n\nconst debounce = (fn) => {\n  let id = null;\n\n  return (...args) => {\n    if (id) {\n      clearTimeout(id);\n    }\n    id = setTimeout(() => {\n      fn(...args);\n      id = null;\n    }, 300);\n  };\n};\n\nconst doTranslation = debounce(\n  async (input, languageCode, cancelToken, callback) => {\n    try {\n      const { data } = await axios.post(\n        \"https://translation.googleapis.com/language/translate/v2?key=AIzaSyCf0Xy0OnhxlduyEt3K8zP-sOuu-l_u6uA\",\n        {\n          q: input,\n          target: languageCode\n        },\n        { cancelToken: cancelToken.token }\n      );\n\n      callback(data.data.translations[0].translatedText);\n    } catch (err) {\n      callback(\"\");\n    }\n  }\n);\n\nexport default Translate;\n","import React, { useState } from \"react\";\nimport Field from \"./components/field\";\nimport Translate from \"./components/translate\";\nimport Languages from \"./components/languages\";\n\nexport default function App() {\n  return (\n    <div>\n      <h3>Hi there!</h3>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <div className=\"wrapper\">\n      <App />\n    </div>\n  </StrictMode>\n);\n"],"sourceRoot":""}